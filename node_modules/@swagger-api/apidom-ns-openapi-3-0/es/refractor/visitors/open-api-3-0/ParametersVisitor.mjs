import stampit from 'stampit';
import { ArrayElement, BREAK } from '@swagger-api/apidom-core';
import FallbackVisitor from "../FallbackVisitor.mjs";
import SpecificationVisitor from "../SpecificationVisitor.mjs";
import { isReferenceLikeElement } from "../../predicates.mjs";
import { isReferenceElement } from "../../../predicates.mjs";
const ParametersVisitor = stampit(SpecificationVisitor, FallbackVisitor, {
  init() {
    this.element = new ArrayElement();
    this.element.classes.push('parameters');
  },
  methods: {
    ArrayElement(arrayElement) {
      arrayElement.forEach(item => {
        const specPath = isReferenceLikeElement(item) ? ['document', 'objects', 'Reference'] : ['document', 'objects', 'Parameter'];
        const element = this.toRefractedElement(specPath, item);
        if (isReferenceElement(element)) {
          element.setMetaProperty('referenced-element', 'parameter');
        }
        this.element.push(element);
      });
      this.copyMetaAndAttributes(arrayElement, this.element);
      return BREAK;
    }
  }
});
export default ParametersVisitor;
import { specificationObj as JSONSchemaDraft4Specification } from '@swagger-api/apidom-ns-json-schema-draft-4';
import OpenApi3_0Visitor from "./visitors/open-api-3-0/index.mjs";
import OpenapiVisitor from "./visitors/open-api-3-0/OpenapiVisitor.mjs";
import SpecificationExtensionVisitor from "./visitors/SpecificationExtensionVisitor.mjs";
import InfoVisitor from "./visitors/open-api-3-0/info/index.mjs";
import InfoTitleVisitor from "./visitors/open-api-3-0/info/TitleVisitor.mjs";
import InfoDescriptionVisitor from "./visitors/open-api-3-0/info/DescriptionVisitor.mjs";
import InfoTermsOfServiceVisitor from "./visitors/open-api-3-0/info/TermsOfServiceVisitor.mjs";
import InfoVersionVisitor from "./visitors/open-api-3-0/info/VersionVisitor.mjs";
import ContactVisitor from "./visitors/open-api-3-0/contact/index.mjs";
import ContactNameVisitor from "./visitors/open-api-3-0/contact/NameVisitor.mjs";
import ContactUrlVisitor from "./visitors/open-api-3-0/contact/UrlVisitor.mjs";
import ContactEmailVisitor from "./visitors/open-api-3-0/contact/EmailVisitor.mjs";
import LicenseVisitor from "./visitors/open-api-3-0/license/index.mjs";
import LicenseNameVisitor from "./visitors/open-api-3-0/license/NameVisitor.mjs";
import LicenseUrlVisitor from "./visitors/open-api-3-0/license/UrlVisitor.mjs";
import LinkVisitor from "./visitors/open-api-3-0/link/index.mjs";
import LinkOperationRefVisitor from "./visitors/open-api-3-0/link/OperationRefVisitor.mjs";
import LinkOperationIdVisitor from "./visitors/open-api-3-0/link/OperationIdVisitor.mjs";
import LinkParametersVisitor from "./visitors/open-api-3-0/link/ParametersVisitor.mjs";
import LinkRequestBodyVisitor from "./visitors/open-api-3-0/link/RequestBodyVisitor.mjs";
import LinkDescriptionVisitor from "./visitors/open-api-3-0/link/DescriptionVisitor.mjs";
import ServerVisitor from "./visitors/open-api-3-0/server/index.mjs";
import ServerUrlVisitor from "./visitors/open-api-3-0/server/UrlVisitor.mjs";
import ServerDescriptionVisitor from "./visitors/open-api-3-0/server/DescriptionVisitor.mjs";
import ServersVisitor from "./visitors/open-api-3-0/ServersVisitor.mjs";
import ServerVariableVisitor from "./visitors/open-api-3-0/server-variable/index.mjs";
import ServerVariableEnumVisitor from "./visitors/open-api-3-0/server-variable/EnumVisitor.mjs";
import ServerVariableDefaultVisitor from "./visitors/open-api-3-0/server-variable/DefaultVisitor.mjs";
import ServerVariableDescriptionVisitor from "./visitors/open-api-3-0/server-variable/DescriptionVisitor.mjs";
import ServerVariablesVisitor from "./visitors/open-api-3-0/server/VariablesVisitor.mjs";
import FallbackVisitor from "./visitors/FallbackVisitor.mjs";
import MediaTypeVisitor from "./visitors/open-api-3-0/media-type/index.mjs";
import MediaTypeSchemaVisitor from "./visitors/open-api-3-0/media-type/SchemaVisitor.mjs";
import MediaTypeExampleVisitor from "./visitors/open-api-3-0/media-type/ExampleVisitor.mjs";
import MediaTypeExamplesVisitor from "./visitors/open-api-3-0/media-type/ExamplesVisitor.mjs";
import MediaTypeEncodingVisitor from "./visitors/open-api-3-0/media-type/EncodingVisitor.mjs";
import SecurityRequirementVisitor from "./visitors/open-api-3-0/security-requirement/index.mjs";
import SecurityVisitor from "./visitors/open-api-3-0/SecurityVisitor.mjs";
import ComponentsVisitor from "./visitors/open-api-3-0/components/index.mjs";
import TagVisitor from "./visitors/open-api-3-0/tag/index.mjs";
import TagNameVisitor from "./visitors/open-api-3-0/tag/NameVisitor.mjs";
import TagDescriptionVisitor from "./visitors/open-api-3-0/tag/DescriptionVisitor.mjs";
import ReferenceVisitor from "./visitors/open-api-3-0/reference/index.mjs";
import Reference$RefVisitor from "./visitors/open-api-3-0/reference/$RefVisitor.mjs";
import ParameterVisitor from "./visitors/open-api-3-0/parameter/index.mjs";
import ParameterNameVisitor from "./visitors/open-api-3-0/parameter/NameVisitor.mjs";
import ParameterInVisitor from "./visitors/open-api-3-0/parameter/InVisitor.mjs";
import ParameterDescriptionVisitor from "./visitors/open-api-3-0/parameter/DescriptionVisitor.mjs";
import ParameterRequiredVisitor from "./visitors/open-api-3-0/parameter/RequiredVisitor.mjs";
import ParameterDeprecatedVisitor from "./visitors/open-api-3-0/parameter/DeprecatedVisitor.mjs";
import ParameterAllowEmptyValueVisitor from "./visitors/open-api-3-0/parameter/AllowEmptyValueVisitor.mjs";
import ParameterStyleVisitor from "./visitors/open-api-3-0/parameter/StyleVisitor.mjs";
import ParameterExplodeVisitor from "./visitors/open-api-3-0/parameter/ExplodeVisitor.mjs";
import ParameterAllowReservedVisitor from "./visitors/open-api-3-0/parameter/AllowReservedVisitor.mjs";
import ParameterSchemaVisitor from "./visitors/open-api-3-0/parameter/SchemaVisitor.mjs";
import HeaderVisitor from "./visitors/open-api-3-0/header/index.mjs";
import HeaderDescriptionVisitor from "./visitors/open-api-3-0/header/DescriptionVisitor.mjs";
import HeaderRequiredVisitor from "./visitors/open-api-3-0/header/RequiredVisitor.mjs";
import HeaderDeprecatedVisitor from "./visitors/open-api-3-0/header/DeprecatedVisitor.mjs";
import HeaderAllowEmptyValueVisitor from "./visitors/open-api-3-0/header/AllowEmptyValueVisitor.mjs";
import HeaderStyleVisitor from "./visitors/open-api-3-0/header/StyleVisitor.mjs";
import HeaderExplodeVisitor from "./visitors/open-api-3-0/header/ExplodeVisitor.mjs";
import HeaderAllowReservedVisitor from "./visitors/open-api-3-0/header/AllowReservedVisitor.mjs";
import HeaderSchemaVisitor from "./visitors/open-api-3-0/header/SchemaVisitor.mjs";
import HeaderExampleVisitor from "./visitors/open-api-3-0/header/ExampleVisitor.mjs";
import HeaderExamplesVisitor from "./visitors/open-api-3-0/header/ExamplesVisitor.mjs";
import HeaderContentVisitor from "./visitors/open-api-3-0/header/ContentVisitor.mjs";
import SchemaVisitor from "./visitors/open-api-3-0/schema/index.mjs";
import SchemaAllOfVisitor from "./visitors/open-api-3-0/schema/AllOfVisitor.mjs";
import SchemaAnyOfVisitor from "./visitors/open-api-3-0/schema/AnyOfVisitor.mjs";
import SchemaOneOfVisitor from "./visitors/open-api-3-0/schema/OneOfVisitor.mjs";
import SchemaItemsVisitor from "./visitors/open-api-3-0/schema/ItemsVisitor.mjs";
import SchemaPropertiesVisitor from "./visitors/open-api-3-0/schema/PropertiesVisitor.mjs";
import SchemaTypeVisitor from "./visitors/open-api-3-0/schema/TypeVisitor.mjs";
import SchemaNullableVisitor from "./visitors/open-api-3-0/schema/NullableVisitor.mjs";
import SchemaWriteOnlyVisitor from "./visitors/open-api-3-0/schema/WriteOnlyVisitor.mjs";
import SchemaExampleVisitor from "./visitors/open-api-3-0/schema/ExampleVisitor.mjs";
import SchemaDeprecatedVisitor from "./visitors/open-api-3-0/schema/DeprecatedVisitor.mjs";
import SchemaOrReferenceVisitor from "./visitors/open-api-3-0/schema/SchemaOrReferenceVisitor.mjs";
import DiscriminatorVisitor from "./visitors/open-api-3-0/distriminator/index.mjs";
import DiscriminatorPropertyNameVisitor from "./visitors/open-api-3-0/distriminator/PropertyNameVisitor.mjs";
import DiscriminatorMappingVisitor from "./visitors/open-api-3-0/distriminator/MappingVisitor.mjs";
import XmlVisitor from "./visitors/open-api-3-0/xml/index.mjs";
import XmlNameVisitor from "./visitors/open-api-3-0/xml/NameVisitor.mjs";
import XmlNamespaceVisitor from "./visitors/open-api-3-0/xml/NamespaceVisitor.mjs";
import XmlPrefixVisitor from "./visitors/open-api-3-0/xml/PrefixVisitor.mjs";
import XmlAttributeVisitor from "./visitors/open-api-3-0/xml/AttributeVisitor.mjs";
import XmlWrappedVisitor from "./visitors/open-api-3-0/xml/WrappedVisitor.mjs";
import ParameterExampleVisitor from "./visitors/open-api-3-0/parameter/ExampleVisitor.mjs";
import ParameterExamplesVisitor from "./visitors/open-api-3-0/parameter/ExamplesVisitor.mjs";
import ParameterContentVisitor from "./visitors/open-api-3-0/parameter/ContentVisitor.mjs";
import ComponentsSchemasVisitor from "./visitors/open-api-3-0/components/SchemasVisitor.mjs";
import ComponentsResponsesVisitor from "./visitors/open-api-3-0/components/ResponsesVisitor.mjs";
import ComponentsParametersVisitor from "./visitors/open-api-3-0/components/ParametersVisitor.mjs";
import ComponentsExamplesVisitor from "./visitors/open-api-3-0/components/ExamplesVisitor.mjs";
import ComponentsRequestBodiesVisitor from "./visitors/open-api-3-0/components/RequestBodiesVisitor.mjs";
import ComponentsHeadersVisitor from "./visitors/open-api-3-0/components/HeadersVisitor.mjs";
import ComponentsSecuritySchemesVisitor from "./visitors/open-api-3-0/components/SecuritySchemesVisitor.mjs";
import ComponentsLinksVisitor from "./visitors/open-api-3-0/components/LinksVisitor.mjs";
import ComponentsCallbacksVisitor from "./visitors/open-api-3-0/components/CallbacksVisitor.mjs";
import ExampleVisitor from "./visitors/open-api-3-0/example/index.mjs";
import ExampleSummaryVisitor from "./visitors/open-api-3-0/example/SummaryVisitor.mjs";
import ExampleDescriptionVisitor from "./visitors/open-api-3-0/example/DescriptionVisitor.mjs";
import ExampleValueVisitor from "./visitors/open-api-3-0/example/ValueVisitor.mjs";
import ExampleExternalValueVisitor from "./visitors/open-api-3-0/example/ExternalValueVisitor.mjs";
import ExternalDocumentationVisitor from "./visitors/open-api-3-0/external-documentation/index.mjs";
import ExternalDocumentationDescriptionVisitor from "./visitors/open-api-3-0/external-documentation/DescriptionVisitor.mjs";
import ExternalDocumentationUrlVisitor from "./visitors/open-api-3-0/external-documentation/UrlVisitor.mjs";
import EncodingVisitor from "./visitors/open-api-3-0/encoding/index.mjs";
import EncodingContentTypeVisitor from "./visitors/open-api-3-0/encoding/ContentTypeVisitor.mjs";
import EncodingHeadersVisitor from "./visitors/open-api-3-0/encoding/HeadersVisitor.mjs";
import EncodingStyleVisitor from "./visitors/open-api-3-0/encoding/StyleVisitor.mjs";
import EncodingExplodeVisitor from "./visitors/open-api-3-0/encoding/ExplodeVisitor.mjs";
import EncodingAllowReserved from "./visitors/open-api-3-0/encoding/AllowReservedVisitor.mjs";
import PathsVisitor from "./visitors/open-api-3-0/paths/index.mjs";
import RequestBodyVisitor from "./visitors/open-api-3-0/request-body/index.mjs";
import RequestBodyDescriptionVisitor from "./visitors/open-api-3-0/request-body/DescriptionVisitor.mjs";
import RequestBodyContentVisitor from "./visitors/open-api-3-0/request-body/ContentVisitor.mjs";
import RequestBodyRequiredVisitor from "./visitors/open-api-3-0/request-body/RequiredVisitor.mjs";
import CallbackVisitor from "./visitors/open-api-3-0/callback/index.mjs";
import ResponseVisitor from "./visitors/open-api-3-0/response/index.mjs";
import ResponseDescriptionVisitor from "./visitors/open-api-3-0/response/DescriptionVisitor.mjs";
import ResponseHeadersVisitor from "./visitors/open-api-3-0/response/HeadersVisitor.mjs";
import ResponseContentVisitor from "./visitors/open-api-3-0/response/ContentVisitor.mjs";
import ResponseLinksVisitor from "./visitors/open-api-3-0/response/LinksVisitor.mjs";
import ResponsesVisitor from "./visitors/open-api-3-0/responses/index.mjs";
import ResponsesDefaultVisitor from "./visitors/open-api-3-0/responses/DefaultVisitor.mjs";
import OperationVisitor from "./visitors/open-api-3-0/operation/index.mjs";
import OperationTagsVisitor from "./visitors/open-api-3-0/operation/TagsVisitor.mjs";
import OperationSummaryVisitor from "./visitors/open-api-3-0/operation/SummaryVisitor.mjs";
import OperationDescriptionVisitor from "./visitors/open-api-3-0/operation/DescriptionVisitor.mjs";
import OperationOperationIdVisitor from "./visitors/open-api-3-0/operation/OperationIdVisitor.mjs";
import OperationParametersVisitor from "./visitors/open-api-3-0/operation/ParametersVisitor.mjs";
import OperationRequestBodyVisitor from "./visitors/open-api-3-0/operation/RequestBodyVisitor.mjs";
import OperationCallbacksVisitor from "./visitors/open-api-3-0/operation/CallbacksVisitor.mjs";
import OperationDeprecatedVisitor from "./visitors/open-api-3-0/operation/DeprecatedVisitor.mjs";
import OperationSecurityVisitor from "./visitors/open-api-3-0/operation/SecurityVisitor.mjs";
import OperationServersVisitor from "./visitors/open-api-3-0/operation/ServersVisitor.mjs";
import PathItemVisitor from "./visitors/open-api-3-0/path-item/index.mjs";
import PathItem$RefVisitor from "./visitors/open-api-3-0/path-item/$RefVisitor.mjs";
import PathItemSummaryVisitor from "./visitors/open-api-3-0/path-item/SummaryVisitor.mjs";
import PathItemDescriptionVisitor from "./visitors/open-api-3-0/path-item/DescriptionVisitor.mjs";
import PathItemServersVisitor from "./visitors/open-api-3-0/path-item/ServersVisitor.mjs";
import PathItemParametersVisitor from "./visitors/open-api-3-0/path-item/ParametersVisitor.mjs";
import SecuritySchemeVisitor from "./visitors/open-api-3-0/security-scheme/index.mjs";
import SecuritySchemeTypeVisitor from "./visitors/open-api-3-0/security-scheme/TypeVisitor.mjs";
import SecuritySchemeDescriptionVisitor from "./visitors/open-api-3-0/security-scheme/DescriptionVisitor.mjs";
import SecuritySchemeNameVisitor from "./visitors/open-api-3-0/security-scheme/NameVisitor.mjs";
import SecuritySchemeInVisitor from "./visitors/open-api-3-0/security-scheme/InVisitor.mjs";
import SecuritySchemeSchemeVisitor from "./visitors/open-api-3-0/security-scheme/SchemeVisitor.mjs";
import SecuritySchemeBearerFormatVisitor from "./visitors/open-api-3-0/security-scheme/BearerFormatVisitor.mjs";
import SecuritySchemeOpenIdConnectUrlVisitor from "./visitors/open-api-3-0/security-scheme/OpenIdConnectUrlVisitor.mjs";
import OAuthFlowsVisitor from "./visitors/open-api-3-0/oauth-flows/index.mjs";
import OAuthFlowVisitor from "./visitors/open-api-3-0/oauth-flow/index.mjs";
import OAuthFlowAuthorizationUrlVisitor from "./visitors/open-api-3-0/oauth-flow/AuthorizationUrlVisitor.mjs";
import OAuthFlowTokenUrlVisitor from "./visitors/open-api-3-0/oauth-flow/TokenUrlVisitor.mjs";
import OAuthFlowRefreshUrlVisitor from "./visitors/open-api-3-0/oauth-flow/RefreshUrlVisitor.mjs";
import OAuthFlowScopesVisitor from "./visitors/open-api-3-0/oauth-flow/ScopesVisitor.mjs";
import TagsVisitor from "./visitors/open-api-3-0/TagsVisitor.mjs";
/**
 * Specification object allows us to have complete control over visitors
 * when traversing the ApiDOM.
 * Specification also allows us to create amended refractors from
 * existing ones by manipulating it.
 *
 * Note: Specification object allows to use absolute internal JSON pointers.
 */
const {
  fixedFields: jsonSchemaFixedFields
} = JSONSchemaDraft4Specification.visitors.document.objects.JSONSchema;
const specification = {
  visitors: {
    value: FallbackVisitor,
    document: {
      objects: {
        OpenApi: {
          $visitor: OpenApi3_0Visitor,
          fixedFields: {
            openapi: OpenapiVisitor,
            info: {
              $ref: '#/visitors/document/objects/Info'
            },
            servers: ServersVisitor,
            paths: {
              $ref: '#/visitors/document/objects/Paths'
            },
            components: {
              $ref: '#/visitors/document/objects/Components'
            },
            security: SecurityVisitor,
            tags: TagsVisitor,
            externalDocs: {
              $ref: '#/visitors/document/objects/ExternalDocumentation'
            }
          }
        },
        Info: {
          $visitor: InfoVisitor,
          fixedFields: {
            title: InfoTitleVisitor,
            description: InfoDescriptionVisitor,
            termsOfService: InfoTermsOfServiceVisitor,
            contact: {
              $ref: '#/visitors/document/objects/Contact'
            },
            license: {
              $ref: '#/visitors/document/objects/License'
            },
            version: InfoVersionVisitor
          }
        },
        Contact: {
          $visitor: ContactVisitor,
          fixedFields: {
            name: ContactNameVisitor,
            url: ContactUrlVisitor,
            email: ContactEmailVisitor
          }
        },
        License: {
          $visitor: LicenseVisitor,
          fixedFields: {
            name: LicenseNameVisitor,
            url: LicenseUrlVisitor
          }
        },
        Server: {
          $visitor: ServerVisitor,
          fixedFields: {
            url: ServerUrlVisitor,
            description: ServerDescriptionVisitor,
            variables: ServerVariablesVisitor
          }
        },
        ServerVariable: {
          $visitor: ServerVariableVisitor,
          fixedFields: {
            enum: ServerVariableEnumVisitor,
            default: ServerVariableDefaultVisitor,
            description: ServerVariableDescriptionVisitor
          }
        },
        Components: {
          $visitor: ComponentsVisitor,
          fixedFields: {
            schemas: ComponentsSchemasVisitor,
            responses: ComponentsResponsesVisitor,
            parameters: ComponentsParametersVisitor,
            examples: ComponentsExamplesVisitor,
            requestBodies: ComponentsRequestBodiesVisitor,
            headers: ComponentsHeadersVisitor,
            securitySchemes: ComponentsSecuritySchemesVisitor,
            links: ComponentsLinksVisitor,
            callbacks: ComponentsCallbacksVisitor
          }
        },
        Paths: {
          $visitor: PathsVisitor
        },
        PathItem: {
          $visitor: PathItemVisitor,
          fixedFields: {
            $ref: PathItem$RefVisitor,
            summary: PathItemSummaryVisitor,
            description: PathItemDescriptionVisitor,
            get: {
              $ref: '#/visitors/document/objects/Operation'
            },
            put: {
              $ref: '#/visitors/document/objects/Operation'
            },
            post: {
              $ref: '#/visitors/document/objects/Operation'
            },
            delete: {
              $ref: '#/visitors/document/objects/Operation'
            },
            options: {
              $ref: '#/visitors/document/objects/Operation'
            },
            head: {
              $ref: '#/visitors/document/objects/Operation'
            },
            patch: {
              $ref: '#/visitors/document/objects/Operation'
            },
            trace: {
              $ref: '#/visitors/document/objects/Operation'
            },
            servers: PathItemServersVisitor,
            parameters: PathItemParametersVisitor
          }
        },
        Operation: {
          $visitor: OperationVisitor,
          fixedFields: {
            tags: OperationTagsVisitor,
            summary: OperationSummaryVisitor,
            description: OperationDescriptionVisitor,
            externalDocs: {
              $ref: '#/visitors/document/objects/ExternalDocumentation'
            },
            operationId: OperationOperationIdVisitor,
            parameters: OperationParametersVisitor,
            requestBody: OperationRequestBodyVisitor,
            responses: {
              $ref: '#/visitors/document/objects/Responses'
            },
            callbacks: OperationCallbacksVisitor,
            deprecated: OperationDeprecatedVisitor,
            security: OperationSecurityVisitor,
            servers: OperationServersVisitor
          }
        },
        ExternalDocumentation: {
          $visitor: ExternalDocumentationVisitor,
          fixedFields: {
            description: ExternalDocumentationDescriptionVisitor,
            url: ExternalDocumentationUrlVisitor
          }
        },
        Parameter: {
          $visitor: ParameterVisitor,
          fixedFields: {
            name: ParameterNameVisitor,
            in: ParameterInVisitor,
            description: ParameterDescriptionVisitor,
            required: ParameterRequiredVisitor,
            deprecated: ParameterDeprecatedVisitor,
            allowEmptyValue: ParameterAllowEmptyValueVisitor,
            style: ParameterStyleVisitor,
            explode: ParameterExplodeVisitor,
            allowReserved: ParameterAllowReservedVisitor,
            schema: ParameterSchemaVisitor,
            example: ParameterExampleVisitor,
            examples: ParameterExamplesVisitor,
            content: ParameterContentVisitor
          }
        },
        RequestBody: {
          $visitor: RequestBodyVisitor,
          fixedFields: {
            description: RequestBodyDescriptionVisitor,
            content: RequestBodyContentVisitor,
            required: RequestBodyRequiredVisitor
          }
        },
        MediaType: {
          $visitor: MediaTypeVisitor,
          fixedFields: {
            schema: MediaTypeSchemaVisitor,
            example: MediaTypeExampleVisitor,
            examples: MediaTypeExamplesVisitor,
            encoding: MediaTypeEncodingVisitor
          }
        },
        Encoding: {
          $visitor: EncodingVisitor,
          fixedFields: {
            contentType: EncodingContentTypeVisitor,
            headers: EncodingHeadersVisitor,
            style: EncodingStyleVisitor,
            explode: EncodingExplodeVisitor,
            allowReserved: EncodingAllowReserved
          }
        },
        Responses: {
          $visitor: ResponsesVisitor,
          fixedFields: {
            default: ResponsesDefaultVisitor
          }
        },
        Response: {
          $visitor: ResponseVisitor,
          fixedFields: {
            description: ResponseDescriptionVisitor,
            headers: ResponseHeadersVisitor,
            content: ResponseContentVisitor,
            links: ResponseLinksVisitor
          }
        },
        Callback: {
          $visitor: CallbackVisitor
        },
        Example: {
          $visitor: ExampleVisitor,
          fixedFields: {
            summary: ExampleSummaryVisitor,
            description: ExampleDescriptionVisitor,
            value: ExampleValueVisitor,
            externalValue: ExampleExternalValueVisitor
          }
        },
        Link: {
          $visitor: LinkVisitor,
          fixedFields: {
            operationRef: LinkOperationRefVisitor,
            operationId: LinkOperationIdVisitor,
            parameters: LinkParametersVisitor,
            requestBody: LinkRequestBodyVisitor,
            description: LinkDescriptionVisitor,
            server: {
              $ref: '#/visitors/document/objects/Server'
            }
          }
        },
        Header: {
          $visitor: HeaderVisitor,
          fixedFields: {
            description: HeaderDescriptionVisitor,
            required: HeaderRequiredVisitor,
            deprecated: HeaderDeprecatedVisitor,
            allowEmptyValue: HeaderAllowEmptyValueVisitor,
            style: HeaderStyleVisitor,
            explode: HeaderExplodeVisitor,
            allowReserved: HeaderAllowReservedVisitor,
            schema: HeaderSchemaVisitor,
            example: HeaderExampleVisitor,
            examples: HeaderExamplesVisitor,
            content: HeaderContentVisitor
          }
        },
        Tag: {
          $visitor: TagVisitor,
          fixedFields: {
            name: TagNameVisitor,
            description: TagDescriptionVisitor,
            externalDocs: {
              $ref: '#/visitors/document/objects/ExternalDocumentation'
            }
          }
        },
        Reference: {
          $visitor: ReferenceVisitor,
          fixedFields: {
            $ref: Reference$RefVisitor
          }
        },
        JSONSchema: {
          $ref: '#/visitors/document/objects/Schema'
        },
        JSONReference: {
          $ref: '#/visitors/document/objects/Reference'
        },
        Schema: {
          $visitor: SchemaVisitor,
          fixedFields: {
            // the following properties are taken directly from the JSON Schema definition and follow the same specifications
            title: jsonSchemaFixedFields.title,
            multipleOf: jsonSchemaFixedFields.multipleOf,
            maximum: jsonSchemaFixedFields.maximum,
            exclusiveMaximum: jsonSchemaFixedFields.exclusiveMaximum,
            minimum: jsonSchemaFixedFields.minimum,
            exclusiveMinimum: jsonSchemaFixedFields.exclusiveMinimum,
            maxLength: jsonSchemaFixedFields.maxLength,
            minLength: jsonSchemaFixedFields.minLength,
            pattern: jsonSchemaFixedFields.pattern,
            maxItems: jsonSchemaFixedFields.maxItems,
            minItems: jsonSchemaFixedFields.minItems,
            uniqueItems: jsonSchemaFixedFields.uniqueItems,
            maxProperties: jsonSchemaFixedFields.maxProperties,
            minProperties: jsonSchemaFixedFields.minProperties,
            required: jsonSchemaFixedFields.required,
            enum: jsonSchemaFixedFields.enum,
            // the following properties are taken from the JSON Schema definition but their definitions were adjusted to the OpenAPI Specification
            type: SchemaTypeVisitor,
            allOf: SchemaAllOfVisitor,
            anyOf: SchemaAnyOfVisitor,
            oneOf: SchemaOneOfVisitor,
            not: SchemaOrReferenceVisitor,
            items: SchemaItemsVisitor,
            properties: SchemaPropertiesVisitor,
            additionalProperties: SchemaOrReferenceVisitor,
            description: jsonSchemaFixedFields.description,
            format: jsonSchemaFixedFields.format,
            default: jsonSchemaFixedFields.default,
            // OpenAPI vocabulary
            nullable: SchemaNullableVisitor,
            discriminator: {
              $ref: '#/visitors/document/objects/Discriminator'
            },
            writeOnly: SchemaWriteOnlyVisitor,
            xml: {
              $ref: '#/visitors/document/objects/XML'
            },
            externalDocs: {
              $ref: '#/visitors/document/objects/ExternalDocumentation'
            },
            example: SchemaExampleVisitor,
            deprecated: SchemaDeprecatedVisitor
          }
        },
        Discriminator: {
          $visitor: DiscriminatorVisitor,
          fixedFields: {
            propertyName: DiscriminatorPropertyNameVisitor,
            mapping: DiscriminatorMappingVisitor
          }
        },
        XML: {
          $visitor: XmlVisitor,
          fixedFields: {
            name: XmlNameVisitor,
            namespace: XmlNamespaceVisitor,
            prefix: XmlPrefixVisitor,
            attribute: XmlAttributeVisitor,
            wrapped: XmlWrappedVisitor
          }
        },
        SecurityScheme: {
          $visitor: SecuritySchemeVisitor,
          fixedFields: {
            type: SecuritySchemeTypeVisitor,
            description: SecuritySchemeDescriptionVisitor,
            name: SecuritySchemeNameVisitor,
            in: SecuritySchemeInVisitor,
            scheme: SecuritySchemeSchemeVisitor,
            bearerFormat: SecuritySchemeBearerFormatVisitor,
            flows: {
              $ref: '#/visitors/document/objects/OAuthFlows'
            },
            openIdConnectUrl: SecuritySchemeOpenIdConnectUrlVisitor
          }
        },
        OAuthFlows: {
          $visitor: OAuthFlowsVisitor,
          fixedFields: {
            implicit: {
              $ref: '#/visitors/document/objects/OAuthFlow'
            },
            password: {
              $ref: '#/visitors/document/objects/OAuthFlow'
            },
            clientCredentials: {
              $ref: '#/visitors/document/objects/OAuthFlow'
            },
            authorizationCode: {
              $ref: '#/visitors/document/objects/OAuthFlow'
            }
          }
        },
        OAuthFlow: {
          $visitor: OAuthFlowVisitor,
          fixedFields: {
            authorizationUrl: OAuthFlowAuthorizationUrlVisitor,
            tokenUrl: OAuthFlowTokenUrlVisitor,
            refreshUrl: OAuthFlowRefreshUrlVisitor,
            scopes: OAuthFlowScopesVisitor
          }
        },
        SecurityRequirement: {
          $visitor: SecurityRequirementVisitor
        }
      },
      extension: {
        $visitor: SpecificationExtensionVisitor
      }
    }
  }
};
export default specification;
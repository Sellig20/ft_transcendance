"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault").default;
exports.__esModule = true;
exports.default = exports.CallbackVisitor = void 0;
var _stampit = _interopRequireDefault(require("stampit"));
var _ramda = require("ramda");
var _ramdaAdjunct = require("ramda-adjunct");
var _visitor = require("./visitor.cjs");
var _index = require("../predicates/index.cjs");
const CallbackVisitor = exports.CallbackVisitor = (0, _stampit.default)(_visitor.PredicateVisitor, {
  props: {
    callback: _ramdaAdjunct.noop
  },
  // @ts-ignore
  init({
    callback = this.callback
  } = {}) {
    this.callback = callback;
  },
  methods: {
    enter(element) {
      if (this.predicate(element)) {
        this.callback(element);
        return this.returnOnTrue;
      }
      return this.returnOnFalse;
    }
  }
});

// executes the callback on this element and all descendants
const traverse = (options, element) => {
  let callback;
  let predicate;
  if ((0, _ramdaAdjunct.isFunction)(options)) {
    callback = options;
    predicate = _index.isElement;
  } else {
    callback = (0, _ramda.pathOr)(_ramdaAdjunct.noop, ['callback'], options);
    predicate = (0, _ramda.pathOr)(_index.isElement, ['predicate'], options);
  }
  const visitor = CallbackVisitor({
    callback,
    predicate
  });

  // @ts-ignore
  (0, _visitor.visit)(element, visitor);
};
var _default = exports.default = traverse;
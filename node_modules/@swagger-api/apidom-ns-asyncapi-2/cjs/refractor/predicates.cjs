"use strict";

exports.__esModule = true;
exports.isServerLikeElement = exports.isSecurityRequirementLikeElement = exports.isSchemaLikeElement = exports.isReferenceLikeElement = exports.isParameterLikeElement = exports.isAsyncApiExtension = exports.isAsyncApi2LikeElement = void 0;
var _ramda = require("ramda");
var _apidomCore = require("@swagger-api/apidom-core");
const isAsyncApi2LikeElement = element => {
  return (0, _apidomCore.isObjectElement)(element) &&
  // @ts-ignore
  element.hasKey('asyncapi') &&
  // @ts-ignore
  element.hasKey('info') &&
  // @ts-ignore
  element.hasKey('channels');
};
exports.isAsyncApi2LikeElement = isAsyncApi2LikeElement;
const isParameterLikeElement = element => {
  // @ts-ignore
  return (0, _apidomCore.isObjectElement)(element);
};
exports.isParameterLikeElement = isParameterLikeElement;
const isReferenceLikeElement = element => {
  // @ts-ignore
  return (0, _apidomCore.isObjectElement)(element) && element.hasKey('$ref');
};
exports.isReferenceLikeElement = isReferenceLikeElement;
const isSchemaLikeElement = element => {
  // @ts-ignore
  return (0, _apidomCore.isObjectElement)(element);
};
exports.isSchemaLikeElement = isSchemaLikeElement;
const isSecurityRequirementLikeElement = element => {
  return (0, _apidomCore.isObjectElement)(element);
};
exports.isSecurityRequirementLikeElement = isSecurityRequirementLikeElement;
const isServerLikeElement = element => {
  // @ts-ignore
  return (0, _apidomCore.isObjectElement)(element) && element.hasKey('url') && element.hasKey('protocol');
};
exports.isServerLikeElement = isServerLikeElement;
const isAsyncApiExtension = element => {
  // @ts-ignore
  return (0, _apidomCore.isStringElement)(element.key) && (0, _ramda.startsWith)('x-', (0, _apidomCore.toValue)(element.key));
};
exports.isAsyncApiExtension = isAsyncApiExtension;
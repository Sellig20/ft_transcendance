import stampit from 'stampit';
import { isJSONReferenceLikeElement, isJSONReferenceElement } from '@swagger-api/apidom-ns-json-schema-draft-4';
import DefinitionsElement from "../../../../elements/Definitions.mjs";
import MapVisitor from "../../generics/MapVisitor.mjs";
import FallbackVisitor from "../../FallbackVisitor.mjs";
const DefinitionsVisitor = stampit(MapVisitor, FallbackVisitor, {
  props: {
    specPath: element => {
      return isJSONReferenceLikeElement(element) ? ['document', 'objects', 'JSONReference'] : ['document', 'objects', 'Schema'];
    }
  },
  init() {
    this.element = new DefinitionsElement();
  },
  methods: {
    ObjectElement(objectElement) {
      // @ts-ignore
      const result = MapVisitor.compose.methods.ObjectElement.call(this, objectElement);

      // decorate every JSONReferenceElement with metadata about their referencing type
      this.element.filter(isJSONReferenceElement).forEach(referenceElement => {
        referenceElement.setMetaProperty('referenced-element', 'schema');
      });
      return result;
    }
  }
});
export default DefinitionsVisitor;
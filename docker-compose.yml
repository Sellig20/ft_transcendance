version: '3.9'

networks:
  trans:

# DÃ©claration du volume ici
volumes:
  data:

services:
# # # # # # # # # # # # # # # # # # # # # # # # # # # #
#                    DATABASE                         #
# # # # # # # # # # # # # # # # # # # # # # # # # # # #

  database:
    image: postgres
    container_name: database
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
    ports:
      - "5432:5432"
    networks:
      - trans
    volumes:
      - data:/var/lib/postgresql/data
    # volumes:
    #   - ./docker-data:/var/lib/postgresql/data
    

  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: pgadmin_container
  #   restart: always
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: test@test.fr
  #     PGADMIN_DEFAULT_PASSWORD: test
  #     TZ: "Europe/Paris"
  #   logging:
  #     driver: none
  #   volumes:
  #     - ./docker-data/pgadmin-data:/pgadmin4/servers.json
  #   ports:
  #     - 5050:80
  #   networks:
  #     - trans
  #   depends_on:
  #     - database
  #     - front-end


# # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# #                   BACK-END                          #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # #

  back-end:
    depends_on:
      database:
        condition: service_started
    networks:
      - trans
    build:
      context: ./back-end
      dockerfile: ../docker-data/back.dockerfile
    container_name: back-end
    image:  back-end
    environment:
      - DATABASE_URL=${DATABASE_URL}
    ports:
      - "8000:8000"
    volumes:
      - "./back-end:/app"
    restart: always


# # # # # # # # # # # # # # # # # # # # # # # # # # # #
#                   FRONT-END                         #
# # # # # # # # # # # # # # # # # # # # # # # # # # # #
  front-end:
    depends_on:
     - database
     - back-end
    build:
      context: ./front-end
      dockerfile: ../docker-data/front.dockerfile
    container_name: front-end
    image: front-end
    ports:
      - "80:80"
    volumes:
      - ./front-end:/app
    networks:
      - trans
    restart: always
